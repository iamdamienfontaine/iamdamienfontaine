{"version":3,"sources":["img/profileImage.png","component/layouts/Footer.js","component/layouts/Header.js","component/Index.js","component/Contact.js","component/Projet.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","id","Component","Header","to","Index","src","profilImage","alt","width","height","React","Contact","props","state","name","email","message","e","preventDefault","axios","method","url","data","this","then","response","status","alert","resetForm","setState","onSubmit","handleSubmit","bind","htmlFor","type","value","onChange","onNameChange","aria-describedby","onEmailChange","rows","onMessageChange","event","target","Projet","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,0C,2NCsB5BC,E,iLAfP,OAEI,4BAAQC,UAAU,gBAEd,yBAAKC,GAAG,UAEJ,kE,GAVCC,aCyCNC,E,iLAnCP,OACI,gCACI,yBAAKF,GAAG,UACJ,yBAAKD,UAAU,WACX,yBAAKA,UAAU,aAEX,kBAAC,IAAD,CAAMI,GAAG,IAAIJ,UAAU,gBAAvB,WAIA,kBAAC,IAAD,CAAMI,GAAG,UAAUJ,UAAU,gBAA7B,WAIA,kBAAC,IAAD,CAAMI,GAAG,WAAWJ,UAAU,gBAA9B,cAUZ,6BACA,kC,GA9BKE,a,iBCqBNG,E,iLAlBP,OAEI,yBAAKL,UAAU,OACf,6BACA,kFACA,6BACA,uFACA,6BACA,6BACA,yBAAKM,IAAKC,IAAaC,IAAI,SAASC,MAAM,QAAQC,OAAO,e,GAbjDC,IAAMT,W,iBC6EXU,E,YA5Eb,WAAYC,GAAQ,IAAD,8BACpB,4CAAMA,KACDC,MAAQ,CACXC,KAAM,GACNC,MAAO,GACPC,QAAS,IALS,E,0EASNC,GAAG,IAAD,OACbA,EAAEC,iBACFC,IAAM,CACJC,OAAQ,OACRC,IAAI,oDACJC,KAAOC,KAAKV,QACXW,MAAK,SAACC,GACsB,YAAzBA,EAASH,KAAKI,QAChBC,MAAM,iBACN,EAAKC,aAC2B,SAAzBH,EAASH,KAAKI,QACrBC,MAAM,gC,kCAOTJ,KAAKM,SAAS,CAACf,KAAM,GAAIC,MAAO,GAAIC,QAAS,O,+BAIjD,OACG,yBAAKjB,UAAU,OAIb,+CACA,6BACA,6BACA,yBAAKA,UAAU,mBACb,0BAAMC,GAAG,eAAe8B,SAAUP,KAAKQ,aAAaC,KAAKT,MAAOH,OAAO,QAErE,yBAAKrB,UAAU,cACX,2BAAOkC,QAAQ,QAAf,OACA,2BAAOC,KAAK,OAAOnC,UAAU,eAAeoC,MAAOZ,KAAKV,MAAMC,KAAMsB,SAAUb,KAAKc,aAAaL,KAAKT,SAEzG,yBAAKxB,UAAU,cACX,2BAAOkC,QAAQ,sBAAf,SACA,2BAAOC,KAAK,QAAQnC,UAAU,eAAeuC,mBAAiB,YAAYH,MAAOZ,KAAKV,MAAME,MAAOqB,SAAUb,KAAKgB,cAAcP,KAAKT,SAEzI,yBAAKxB,UAAU,cACX,2BAAOkC,QAAQ,WAAf,WACA,8BAAUlC,UAAU,eAAeyC,KAAK,IAAIL,MAAOZ,KAAKV,MAAMG,QAASoB,SAAUb,KAAKkB,gBAAgBT,KAAKT,SAG/G,4BAAQW,KAAK,SAASnC,UAAU,uDAAhC,gB,mCAQK2C,GACdnB,KAAKM,SAAS,CAACf,KAAM4B,EAAMC,OAAOR,U,oCAGnBO,GACfnB,KAAKM,SAAS,CAACd,MAAO2B,EAAMC,OAAOR,U,sCAGlBO,GACjBnB,KAAKM,SAAS,CAACb,QAAS0B,EAAMC,OAAOR,Y,GAzEhBzB,IAAMT,WCiBb2C,E,iLAdP,OAEI,yBAAK7C,UAAU,OAEf,kD,GARSW,IAAMT,WC+BZ4C,MApBf,WACE,OACE,yBAAK9C,UAAU,OACb,kBAAC,IAAD,KAGE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAIC,UAAW5C,IACjC,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,QAAQC,UAAW5C,IACnC,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,WAAWC,UAAWrC,IACxC,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,UAAUC,UAAWJ,KAEzC,kBAAC,EAAD,SCdYK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpC,MAAK,SAAAqC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMhD,c","file":"static/js/main.8d843ee2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileImage.485eb20d.png\";","import React, { Component } from \"react\";\r\n\r\n\r\nclass Footer extends Component{\r\n\r\n    render(){\r\n\r\n        return (\r\n\r\n            <footer className=\"fixed-bottom\">\r\n            \r\n                <div id=\"footer\">\r\n                \r\n                    <span>&copy;Damien Fontaine, 2020.</span>\r\n\r\n                </div>\r\n\r\n            </footer>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component{\r\n    \r\n\r\n    render(){\r\n\r\n        return (\r\n            <header>\r\n                <div id=\"header\">\r\n                    <nav className=\"navbar1\">\r\n                        <div className=\"container\">\r\n\r\n                            <Link to=\"/\" className=\"navbar-brand\">\r\n                                Accueil\r\n                            </Link>\r\n\r\n                            <Link to=\"/projet\" className=\"navbar-brand\">\r\n                                Projets\r\n                            </Link>\r\n\r\n                            <Link to=\"/contact\" className=\"navbar-brand\">\r\n                                Contact\r\n                            </Link>\r\n\r\n                        \r\n\r\n    \r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                \r\n            </header>\r\n            \r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport profilImage from '../img/profileImage.png'\r\n\r\nclass Index extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n\r\n            <div className=\"App\">\r\n            <br/>\r\n            <h1>Mon site internet est encore en développement !</h1>  \r\n            <br/>\r\n            <h2>Auteur : Damien Fontaine - étudiant en informatique </h2>\r\n            <br/>\r\n            <br/>\r\n            <img src={profilImage} alt=\"profil\" width=\"150px\" height=\"200px\" />\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Index","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends React.Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {\r\n  \tname: '',\r\n  \temail: '',\r\n  \tmessage: ''\r\n\t  }\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    axios({\r\n      method: \"POST\", \r\n      url:\"https://immense-mountain-06199.herokuapp.com/send\", \r\n      data:  this.state\r\n    }).then((response)=>{\r\n      if (response.data.status === 'success'){\r\n        alert(\"Message Sent.\"); \r\n        this.resetForm()\r\n      }else if(response.data.status === 'fail'){\r\n        alert(\"Message failed to send.\")\r\n      }\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n    \r\n     this.setState({name: '', email: '', message: ''})\r\n  }\r\n\r\nrender() {\r\n return(\r\n    <div className=\"App\">\r\n      \r\n      \r\n      \r\n      <h1>Contactez moi !</h1>\r\n      <br/>\r\n      <br/>\r\n      <div className=\"col-md-8 m-auto\">\r\n        <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\r\n          \r\n          <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Nom</label>\r\n              <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n              <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <label htmlFor=\"message\">Message</label>\r\n              <textarea className=\"form-control\" rows=\"5\" value={this.state.message} onChange={this.onMessageChange.bind(this)} />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"btn btn-primary justify-content-center d-flex w-100\">Envoyer</button>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n );\r\n}\r\n\r\n  onNameChange(event) {\r\n\tthis.setState({name: event.target.value})\r\n  }\r\n\r\n  onEmailChange(event) {\r\n\tthis.setState({email: event.target.value})\r\n  }\r\n\r\n  onMessageChange(event) {\r\n\tthis.setState({message: event.target.value})\r\n  }\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\n\r\nclass Projet extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n\r\n            <div className=\"App\">\r\n\r\n            <h1>Mes Projets !</h1>  \r\n\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Projet","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Footer from './component/layouts/Footer.js'\nimport Navbar from './component/layouts/Header.js';\nimport Index from './component/Index.js';\nimport Contact from './component/Contact.js';\nimport Projet from './component/Projet.js';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        \n\n        <Navbar/>\n        <Route exact path=\"/\" component={Index} />\n        <Switch>\n        <Route exact path=\"/site\" component={Index} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"/projet\" component={Projet} />\n        </Switch>\n        <Footer/>\n        \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}